<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOk.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAArvAAAK7wF9dopIAAABfUlE
        QVQ4T92RSUuCURiFz2f20WA2qkWBLoQmMyuJaBFhIRHkooVQuwbbGwSto0UDmFNIw64WzaUfzRIRRZIF
        TYt+Qv2BZni72Y0giNzWszznPFx4L/4Yk8gX/IiKPvkFBlHO0zhZhCYhINz0n/WQNVxCshFc8SYOlqGC
        H9d90W6qCKrIJKlJPiy75e0H+ssMo24vzYYAZDz6YA5Zgg/nvSddTNZQmZRDyW7xHmNo5Asmbysd9sOG
        V1u4mpJWMc0iIVYsIANenH7KhiCTPeIDptAU6z+pkYruHBELWXe1ZJBUhFlMMDEdPhw7Ix1MziNDKJtS
        3eIjxtHMtS/UM4pQ3aaWLDs6qt/Skn4ukwSXcOc87qTKUB6VBpnsEZ+YbOPKN+aRwr5ov4qNazcKyCzl
        UkvYTKY1DZWsxeRnJrfy9Q8EoWCXPjCuqKkixMTlHCp+f9krvjDZzle/MIM0uHBUuJRNpewWSj+TfWjj
        bZyMQokBrCcOJdxiBO08/b8Ab9t3iaD/TwN2AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        M/fK2gAAAABJRU5ErkJggg==
</value>
  </data>
</root>