<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>