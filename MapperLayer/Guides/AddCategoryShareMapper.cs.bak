using System;
using System.Collections.Generic;
using System.Data;
using ARM_User.BusinessLayer.Common;
using ARM_User.BusinessLayer.Guides;
using ARM_User.DataLayer.DataSet.GuidesDataSet;
using ARM_User.MapperLayer.Common;
using Microsoft.Practices.EnterpriseLibrary.ExceptionHandling;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;

namespace ARM_User.MapperLayer.Guides
{
  public class AddCategoryShareMapper
    :
      SimpleMapper
        <AddCategoryShare, AddCategoryShareList, AddCategoryShareDS.S_G_ADD_CATEGORY_SHARESDataTable,
          AddCategoryShareDS.S_G_ADD_CATEGORY_SHARESRow>
  {
    protected override AddCategoryShare CreateByRow(AddCategoryShareDS.S_G_ADD_CATEGORY_SHARESRow row)
    {
      var obj = new AddCategoryShare(
        row.ID,
        row.DESIGNATION_NIN,
        row.NAMERU,
        row.NAMEKZ,
        MapperRegistry.Instance.GetCategoryECBMapper().Find(row.S_G_CATEGORY_ECB),
        MapperRegistry.Instance.GetAbilityConvertMapper().Find(row.S_G_ABILITY_CONVERT),
        row.IS_DELETE == 1,
        MapperRegistry.Instance.GetUserMapper().Find(row.ID_USR),
        row.DATLAST);

      return obj;
    }

    public override void Insert(ICollection<DomainObject> objCollection)
    {
      try
      {
        foreach (var obj in objCollection)
        {
          var AddCategoryShare = (AddCategoryShare) obj;

          using (var cmd = Connection.CreateCommand())
          {
            cmd.BindByName = true;
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.CommandText = "S_G_INS_CATEGORY_SHARES";
            cmd.Parameters.Add("Id_", OracleDbType.Decimal, ParameterDirection.Output);
            cmd.Parameters.Add("Designation_NIN_", OracleDbType.Varchar2, ParameterDirection.Input);
            cmd.Parameters.Add("NameRu_", OracleDbType.Varchar2, ParameterDirection.Input);
            cmd.Parameters.Add("NameKz_", OracleDbType.Varchar2, ParameterDirection.Input);
            cmd.Parameters.Add("S_G_Category_ECB_", OracleDbType.Decimal, ParameterDirection.Input);
            cmd.Parameters.Add("S_G_Ability_Convert_", OracleDbType.Decimal, ParameterDirection.Input);
            cmd.Parameters.Add("Is_Delete_", OracleDbType.Decimal, ParameterDirection.Input);
            cmd.Parameters.Add("Err_Code", OracleDbType.Decimal, ParameterDirection.Output);
            cmd.Parameters.Add("Err_Msg", OracleDbType.Varchar2, ParameterDirection.Output);

            cmd.Parameters["Designation_NIN_"].Value = AddCategoryShare.DesignationNIN;
            cmd.Parameters["NameRu_"].Value = AddCategoryShare.NameRu;
            cmd.Parameters["NameKz_"].Value = AddCategoryShare.NameKz;
            cmd.Parameters["S_G_Category_ECB_"].Value = AddCategoryShare.CategoryECB.Id;
            cmd.Parameters["S_G_Ability_Convert_"].Value = AddCategoryShare.AbilityConvert.Id;
            cmd.Parameters["Is_Delete_"].Value = AddCategoryShare.IsDelete ? 1 : 0;
            cmd.Parameters["Err_Msg"].Size = 4000;

            cmd.ExecuteNonQuery();

            if (!((OracleDecimal) cmd.Parameters["Err_Code"].Value).IsNull)
            {
              var errCode = ((OracleDecimal) cmd.Parameters["Err_Code"].Value).ToInt32();
              var errMsg = cmd.Parameters["Err_Msg"].Value.ToString();
              if (errCode != 0)
                throw new OraCustomException(errCode, errMsg);
            }

            obj.SetId(((OracleDecimal) (cmd.Parameters["Id_"].Value)).Value);

            MarkAsNeedLoad();
          }
        }
      }
      catch (Exception ex)
      {
        var rethrow = ExceptionPolicy.HandleException(ex, "Data Policy");
        if (rethrow)
          throw;
      }
    }

    public override void Update(ICollection<DomainObject> objCollection)
    {
      try
      {
        foreach (var obj in objCollection)
        {
          var AddCategoryShare = (AddCategoryShare) obj;

          using (var cmd = Connection.CreateCommand())
          {
            cmd.BindByName = true;
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.CommandText = "S_G_UPD_CATEGORY_SHARES";
            cmd.Parameters.Add("Id_", OracleDbType.Decimal, ParameterDirection.Input);
            cmd.Parameters.Add("Designation_NIN_", OracleDbType.Varchar2, ParameterDirection.Input);
            cmd.Parameters.Add("NameRu_", OracleDbType.Varchar2, ParameterDirection.Input);
            cmd.Parameters.Add("NameKz_", OracleDbType.Varchar2, ParameterDirection.Input);
            cmd.Parameters.Add("S_G_Category_ECB_", OracleDbType.Decimal, ParameterDirection.Input);
            cmd.Parameters.Add("S_G_Ability_Convert_", OracleDbType.Decimal, ParameterDirection.Input);
            cmd.Parameters.Add("Is_Delete_", OracleDbType.Decimal, ParameterDirection.Input);
            cmd.Parameters.Add("Err_Code", OracleDbType.Decimal, ParameterDirection.Output);
            cmd.Parameters.Add("Err_Msg", OracleDbType.Varchar2, ParameterDirection.Output);

            cmd.Parameters["Id_"].Value = AddCategoryShare.Id;
            cmd.Parameters["Designation_NIN_"].Value = AddCategoryShare.DesignationNIN;
            cmd.Parameters["NameRu_"].Value = AddCategoryShare.NameRu;
            cmd.Parameters["NameKz_"].Value = AddCategoryShare.NameKz;
            cmd.Parameters["S_G_Category_ECB_"].Value = AddCategoryShare.CategoryECB.Id;
            cmd.Parameters["S_G_Ability_Convert_"].Value = AddCategoryShare.AbilityConvert.Id;
            cmd.Parameters["Is_Delete_"].Value = AddCategoryShare.IsDelete ? 1 : 0;
            cmd.Parameters["Err_Msg"].Size = 4000;

            cmd.ExecuteNonQuery();

            if (!((OracleDecimal) cmd.Parameters["Err_Code"].Value).IsNull)
            {
              var errCode = ((OracleDecimal) cmd.Parameters["Err_Code"].Value).ToInt32();
              var errMsg = cmd.Parameters["Err_Msg"].Value.ToString();
              if (errCode != 0)
                throw new OraCustomException(errCode, errMsg);
            }

            MarkAsNeedLoad();
          }
        }
      }
      catch (Exception ex)
      {
        var rethrow = ExceptionPolicy.HandleException(ex, "Data Policy");
        if (rethrow)
          throw;
      }
    }

    public override void Delete(ICollection<DomainObject> objCollection)
    {
      try
      {
        foreach (var obj in objCollection)
        {
          using (var cmd = Connection.CreateCommand())
          {
            cmd.BindByName = true;
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.CommandText = "S_G_DEL_CATEGORY_SHARES";
            cmd.Parameters.Add("Id_", OracleDbType.Decimal, ParameterDirection.Input);
            cmd.Parameters.Add("Err_Code", OracleDbType.Decimal, ParameterDirection.Output);
            cmd.Parameters.Add("Err_Msg", OracleDbType.Varchar2, ParameterDirection.Output);
            cmd.Parameters["Id_"].Value = obj.Id;
            cmd.Parameters["Err_Msg"].Size = 4000;

            cmd.ExecuteNonQuery();

            if (!((OracleDecimal) cmd.Parameters["Err_Code"].Value).IsNull)
            {
              var errCode = ((OracleDecimal) cmd.Parameters["Err_Code"].Value).ToInt32();
              var errMsg = cmd.Parameters["Err_Msg"].Value.ToString();
              if (errCode != 0)
                throw new OraCustomException(errCode, errMsg);
            }

            MarkAsNeedLoad();
          }
        }
      }
      catch (Exception ex)
      {
        var rethrow = ExceptionPolicy.HandleException(ex, "Data Policy");
        if (rethrow)
          throw;
      }
    }

    protected override string IdName()
    {
      return "ID";
    }
  }
}